name: Build & publish packages

on:
  schedule:
    - cron: "0 3 * * 1"
  push:
    branches:
      - master

jobs:

  cron:
    runs-on: ubuntu-latest
    steps:
      - name: clone
        uses: actions/checkout@v2

      - name: docker build
        run: docker build cron -t iteamacr/cron

      - name: docker push
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
        run: |
          echo $DOCKER_TOKEN | docker login --username "$DOCKER_USER" --password-stdin
          docker push iteamacr/cron

  node-alpine-builder:
    runs-on: ubuntu-latest
    steps:
      - name: clone
        uses: actions/checkout@v2

      - name: docker build
        run: docker build node-alpine-builder -t iteamacr/node-alpine-builder

      - name: docker push
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
        run: |
          echo $DOCKER_TOKEN | docker login --username "$DOCKER_USER" --password-stdin
          docker push iteamacr/node-alpine-builder

  node-full-icu:
    runs-on: ubuntu-latest
    steps:
      - name: clone
        uses: actions/checkout@v2

      - name: docker build
        run: docker build node-full-icu -t iteamacr/node-full-icu

      - name: docker push
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
        run: |
          echo $DOCKER_TOKEN | docker login --username "$DOCKER_USER" --password-stdin
          docker push iteamacr/node-full-icu

  postgres-backup:
    needs: cron
    runs-on: ubuntu-latest
    steps:
      - name: clone
        uses: actions/checkout@v2

      - name: docker build
        run: |
          docker build postgres-backup -t iteamacr/postgres-backup:latest
          docker tag iteamacr/postgres-backup:latest iteamacr/postgres-backup:buster
          echo "* * * * * /bin/sh /backup.sh >> /var/log/cron.log" > postgres-backup/crontab
          echo "* * * * * /bin/sh /sync.sh >> /var/log/cron.log" >> postgres-backup/crontab
          echo "# empty line" >> postgres-backup/crontab
          docker build postgres-backup -t iteamacr/postgres-backup:every-minute

      - name: docker push
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
        run: |
          echo $DOCKER_TOKEN | docker login --username "$DOCKER_USER" --password-stdin
          docker push iteamacr/postgres-backup:buster
          docker push iteamacr/postgres-backup:latest
          docker push iteamacr/postgres-backup:every-minute
